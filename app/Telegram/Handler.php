<?php

namespace App\Telegram;

use App\Http\Controllers\PostController;
use App\Models\Category;
use App\Models\User;
use DefStudio\Telegraph\Facades\Telegraph;
use DefStudio\Telegraph\Handlers\WebhookHandler;
use DefStudio\Telegraph\Keyboard\ReplyButton;
use DefStudio\Telegraph\Keyboard\ReplyKeyboard;
use Stringable;

class Handler extends WebhookHandler
{
    /**
     * Handle incoming webhook updates
     *
     * @return void
     */
    public function start()
    {

        $this->reply('<b>–ü—Ä–∏–≤–µ—Ç! üëã</b>

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>FictoNews</b> ‚Äì —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –Ω–æ–≤–æ—Å—Ç–Ω–æ–π –ø–æ—Ä—Ç–∞–ª, –≥–¥–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç —Å–æ–∑–¥–∞–µ—Ç –Ω–µ–æ–±—ã—á–Ω—ã–µ –∏ –≤—ã–º—ã—à–ª–µ–Ω–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏.');

        // Telegraph::message('')
        // ->replyKeyboard(ReplyKeyboard::make()->buttons([
        //     ReplyButton::make('üì∞ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å'),
        // ])
        // ->resize())->send();
        Telegraph::message('–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–ª—É—á–∞–π–Ω—É—é –Ω–æ–≤–æ—Å—Ç—å!')->send();
    }

    protected function handleChatMessage(Stringable $text): void
    {
        if($text == 'üì∞ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å'){
            $lats_message = $this->chat->html('–°–µ–∫—É–Ω–¥–æ—á–∫—É...')->send();
            $message = '';
            $data = $this->generatePost();

            $message .= "<b>üì∞ –ù–æ–≤–æ—Å—Ç—å:</b> {$data['title']['ru']}\n";
            $message .= "<b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> {$data['seo_description']['ru']}\n";
            // $message .= "<b>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</b> {$data['category']['name']['ru']}\n";
            // $message .= "{$data['url']}\n";

            Telegraph::chat($this->chat)->deleteMessage($lats_message->telegraphMessageId())->send();
            $this->chat->html($message)->send();
        }else{
            $this->chat->html('–≠—Ç–æ—Ç –±–æ—Ç –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–µ–∫—Å—Ç–∞')->send();
        }
    }

    protected function handleUnknownCommand(Stringable $text): void
    {
        $this->chat->html("–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—É—é –º–Ω–µ –∫–æ–º–∞–Ω–¥—É: $text")->send();
    }

    private function generatePost()
    {
        $category = Category::inRandomOrder()->first();
        $post = new PostController();
        $data = $post->generate($category->name);
        $data['user_id'] = User::inRandomOrder()->first()->id;
        $data['slug'] = \Str::slug($data['title']['ru']);
        $category->posts()->create($data);

        $data['url'] = route('post', ['slug' => $data['slug']]);
        return $data;
    }
}
